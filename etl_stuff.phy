import psycopg2
import pygrametl
from pygrametl.datasources import SQLSource
from pygrametl.tables import Dimension, SlowlyChangingDimension, FactTable

sales_pgconn = psycopg2.connect("host=localhost dbname='fkluboltp' user='postgres' password='takecare'")
dw_pgconn = psycopg2.connect("host=localhost dbname='fklubdw' user='postgres' password='takecare'")

dw_conn_wrapper = pygrametl.ConnectionWrapper(connection=dw_pgconn)

#A postgres query that gets a simplified collection of members and their study info.
member_SQL = """select distinct on (member.id)
id as memberid,
year as joinyear,
regexp_replace(semester, '[0-9].*', '') as study
from member LEFT OUTER JOIN semestergroups on (member.id = semestergroups.member_id)
order by member.id, length(regexp_replace(semester, '[0-9].*', '')) desc"""

location_source = SQLSource(connection=sales_pgconn, query="SELECT id, description FROM room")
sales_source = SQLSource(connection=sales_pgconn, query="SELECT * FROM sale")
member_source = SQLSource(connection=sales_pgconn, query=member_SQL)

product_dimension = SlowlyChangingDimension(
  name="product",
  key="id",
  attributes=["name", "price", "version"],
  lookupatts=["name"],
  versionatt="version")

location_dimension = Dimension(
  name='location',
  key='id',
  attributes=['name', 'locationid'],
  lookupatts=['locationid'])

member_dimension = Dimension(
  name='member',
  key='id',
  attributes=['joinyear', 'study', 'memberid'],
  lookupatts=['memberid'])

date_dimension = Dimension(
  name="date",
  key="id",
  attributes=["year", "month", "day", "vacation", "workday"])

time_dimension = Dimension(
  name="timeofday",
  key="id",
  attributes=["hour", "morning", "afternoon"])

fact_table = FactTable(
  name='sale',
  keyrefs=['locationid'],
  measures=['price'])

for row in member_source:
  member_dimension.ensure(row)
#for row in sales_source:
  #print row
  #row['locationid'] = location_dimension.ensure(row, {'sourceid':'roomid'})
  #fact_table.ensure(row)


dw_conn_wrapper.commit()
dw_conn_wrapper.close()